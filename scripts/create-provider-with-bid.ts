
import { db } from '../server/database.js';
import { users, missions, bids } from '../shared/schema.js';
import { eq, desc } from 'drizzle-orm';

async function createProviderWithBid() {
  console.log('üöÄ Cr√©ation d\'un profil prestataire avec candidature...\n');

  try {
    // 1. R√©cup√©rer l'utilisateur test@swideal.com
    const [testUser] = await db
      .select()
      .from(users)
      .where(eq(users.email, 'test@swideal.com'))
      .limit(1);

    if (!testUser) {
      console.error('‚ùå Utilisateur test@swideal.com non trouv√©');
      console.log('üí° Cr√©ez d\'abord l\'utilisateur avec: npx tsx scripts/complete-test-user-profile.ts');
      process.exit(1);
    }

    console.log(`‚úÖ Client trouv√©: ${testUser.name} (ID: ${testUser.id})\n`);

    // 2. R√©cup√©rer une mission ouverte du client test
    const [openMission] = await db
      .select()
      .from(missions)
      .where(eq(missions.user_id, testUser.id))
      .orderBy(desc(missions.created_at))
      .limit(1);

    if (!openMission) {
      console.error('‚ùå Aucune mission trouv√©e pour test@swideal.com');
      console.log('üí° Cr√©ez d\'abord des missions avec: npx tsx scripts/create-complete-test-missions.ts');
      process.exit(1);
    }

    console.log(`‚úÖ Mission trouv√©e: "${openMission.title}" (ID: ${openMission.id})\n`);

    // 3. Cr√©er un profil prestataire
    const providerEmail = 'provider@swideal.com';
    
    // V√©rifier si le prestataire existe d√©j√†
    const [existingProvider] = await db
      .select()
      .from(users)
      .where(eq(users.email, providerEmail))
      .limit(1);

    let provider;
    if (existingProvider) {
      console.log(`‚úÖ Prestataire existant: ${existingProvider.name} (ID: ${existingProvider.id})`);
      provider = existingProvider;
    } else {
      // Cr√©er le nouveau prestataire
      const [newProvider] = await db
        .insert(users)
        .values({
          email: providerEmail,
          password: 'provider123',
          name: 'Marie Martin',
          role: 'PRO',
          rating_mean: '4.8',
          rating_count: 15,
          profile_data: {
            phone: '+33 6 98 76 54 32',
            location: 'Lyon, France',
            bio: 'D√©veloppeuse Full-Stack avec 6 ans d\'exp√©rience en React, Node.js et TypeScript. Sp√©cialis√©e dans les applications web modernes, les architectures microservices et l\'optimisation des performances. J\'ai livr√© plus de 30 projets avec un taux de satisfaction client de 95%. Passionn√©e par le code propre et les bonnes pratiques, je m\'engage √† fournir des solutions de qualit√© dans les d√©lais impartis.',
            company: 'Marie Martin Dev',
            industry: 'D√©veloppement Web',
            experience: 'Senior Full-Stack Developer avec expertise React/Node.js - 6 ans d\'exp√©rience',
            hourlyRate: '65',
            skills: [
              { name: 'React', hourlyRate: 70, category: 'Frontend' },
              { name: 'TypeScript', hourlyRate: 65, category: 'Frontend' },
              { name: 'Node.js', hourlyRate: 70, category: 'Backend' },
              { name: 'PostgreSQL', hourlyRate: 60, category: 'Database' },
              { name: 'Next.js', hourlyRate: 75, category: 'Frontend' },
              { name: 'Express', hourlyRate: 60, category: 'Backend' },
              { name: 'TailwindCSS', hourlyRate: 55, category: 'Frontend' }
            ],
            portfolio: [
              {
                title: 'Plateforme SaaS B2B',
                description: 'D√©veloppement complet d\'une plateforme SaaS pour la gestion de projets avec React, Node.js et PostgreSQL. +5000 utilisateurs actifs.'
              },
              {
                title: 'Application mobile e-commerce',
                description: 'Application React Native avec backend Node.js, paiement Stripe et synchronisation temps r√©el. 50k+ t√©l√©chargements.'
              },
              {
                title: 'Dashboard Analytics',
                description: 'Tableau de bord temps r√©el avec visualisations D3.js, WebSocket et optimisation des performances.'
              }
            ],
            availability: true,
            keywords: ['react', 'nodejs', 'typescript', 'fullstack', 'saas', 'web', 'mobile'],
            calendarAvailability: []
          },
          created_at: new Date(),
          updated_at: new Date()
        })
        .returning();

      provider = newProvider;
      console.log(`‚úÖ Nouveau prestataire cr√©√©: ${provider.name} (ID: ${provider.id})\n`);
    }

    // 4. V√©rifier si une candidature existe d√©j√†
    const [existingBid] = await db
      .select()
      .from(bids)
      .where(eq(bids.mission_id, openMission.id))
      .limit(1);

    if (existingBid) {
      console.log(`‚ö†Ô∏è  Une candidature existe d√©j√† pour cette mission (ID: ${existingBid.id})`);
      console.log('D√©tails de la candidature existante:');
      console.log(`   - Prix: ${existingBid.price}‚Ç¨`);
      console.log(`   - D√©lai: ${existingBid.timeline_days || 'Non sp√©cifi√©'} jours`);
      console.log(`   - Message: ${existingBid.message?.substring(0, 100)}...`);
    } else {
      // 5. Cr√©er une candidature
      const bidPrice = Math.round(parseInt(openMission.price || '1000') * 0.85); // 85% du prix demand√©
      const bidMessage = `Bonjour,

Je suis tr√®s int√©ress√©e par votre projet "${openMission.title}". Avec mes 6 ans d'exp√©rience en d√©veloppement Full-Stack, je pense √™tre la personne id√©ale pour r√©aliser cette mission.

**Mon approche :**
- Phase 1: Analyse d√©taill√©e des besoins et maquettes (1 semaine)
- Phase 2: D√©veloppement it√©ratif avec livraisons hebdomadaires (3 semaines)
- Phase 3: Tests, optimisation et mise en production (1 semaine)

**Ce que je propose :**
‚úÖ Code propre et document√©
‚úÖ Tests unitaires et d'int√©gration
‚úÖ Architecture scalable
‚úÖ Support post-livraison de 30 jours
‚úÖ Formation √† l'utilisation

**Technologies :**
React, TypeScript, Node.js, PostgreSQL, TailwindCSS

Je suis disponible imm√©diatement et je m'engage √† livrer un produit de qualit√© dans les d√©lais impartis.

N'h√©sitez pas √† consulter mon portfolio pour voir mes r√©alisations pr√©c√©dentes.

Cordialement,
Marie Martin`;

      const [newBid] = await db
        .insert(bids)
        .values({
          mission_id: openMission.id,
          provider_id: provider.id,
          price: bidPrice.toString(),
          timeline_days: 35,
          message: bidMessage,
          status: 'pending',
          bid_type: 'individual',
          created_at: new Date(),
          updated_at: new Date()
        })
        .returning();

      console.log('‚úÖ Candidature cr√©√©e avec succ√®s!\n');
      console.log('üìã D√©tails de la candidature:');
      console.log(`   - ID: ${newBid.id}`);
      console.log(`   - Prix propos√©: ${newBid.price}‚Ç¨`);
      console.log(`   - Prix demand√©: ${openMission.price}‚Ç¨`);
      console.log(`   - √âconomie: ${parseInt(openMission.price || '0') - bidPrice}‚Ç¨`);
      console.log(`   - D√©lai: ${newBid.timeline_days} jours`);
      console.log(`   - Statut: ${newBid.status}`);
    }

    // 6. R√©capitulatif final
    console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('üìä R√âCAPITULATIF');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('üë§ CLIENT:');
    console.log(`   Nom: ${testUser.name}`);
    console.log(`   Email: ${testUser.email}`);
    console.log(`   ID: ${testUser.id}`);
    console.log('');
    console.log('üë®‚Äçüíº PRESTATAIRE:');
    console.log(`   Nom: ${provider.name}`);
    console.log(`   Email: ${provider.email}`);
    console.log(`   ID: ${provider.id}`);
    console.log(`   Rating: ${provider.rating_mean}‚≠ê (${provider.rating_count} avis)`);
    console.log('');
    console.log('üìù MISSION:');
    console.log(`   Titre: ${openMission.title}`);
    console.log(`   ID: ${openMission.id}`);
    console.log(`   Prix: ${openMission.price}‚Ç¨`);
    console.log(`   Cat√©gorie: ${openMission.category}`);
    console.log('');
    console.log('üîó ACC√àS:');
    console.log('   Client - Login: https://swideal.com/login');
    console.log(`   Email: ${testUser.email} | Password: test123`);
    console.log('');
    console.log('   Prestataire - Login: https://swideal.com/login');
    console.log(`   Email: ${provider.email} | Password: provider123`);
    console.log('');
    console.log('   Mission: https://swideal.com/missions/' + openMission.id);
    console.log('   Mes missions (client): https://swideal.com/missions');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');

  } catch (error: any) {
    console.error('‚ùå Erreur lors de la cr√©ation:', error);
    console.error('Stack trace:', error.stack);
    throw error;
  }
}

// Ex√©cution du script
createProviderWithBid()
  .then(() => {
    console.log('\n‚úÖ Script termin√© avec succ√®s !');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n‚ùå √âchec du script:', error);
    process.exit(1);
  });
