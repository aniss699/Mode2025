
import { db } from '../server/database';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';
import bcryptjs from 'bcryptjs';

async function debugAuth() {
  try {
    const email = 'test@swideal.com';
    const password = 'test123';
    
    console.log('üîç V√©rification de l\'authentification pour:', email);
    
    const user = await db.select().from(users).where(eq(users.email, email)).limit(1);
    
    if (user.length === 0) {
      console.log('‚ùå Utilisateur non trouv√©');
      process.exit(1);
    }
    
    console.log('\n‚úÖ Utilisateur trouv√©:');
    console.log('   ID:', user[0].id);
    console.log('   Email:', user[0].email);
    console.log('   Mot de passe stock√©:', user[0].password);
    console.log('   Mot de passe √† v√©rifier:', password);
    
    // V√©rifier si le mot de passe est hach√©
    const isHashed = user[0].password?.startsWith('$2') || false;
    console.log('\nüîê Le mot de passe est-il hach√© (bcrypt)?', isHashed);
    
    if (isHashed) {
      // Tester la comparaison bcrypt
      const isValid = await bcryptjs.compare(password, user[0].password!);
      console.log('   ‚úì Comparaison bcrypt:', isValid ? '‚úÖ VALIDE' : '‚ùå INVALIDE');
    } else {
      // Mot de passe en clair
      const isValid = user[0].password === password;
      console.log('   ‚úì Comparaison texte brut:', isValid ? '‚úÖ VALIDE' : '‚ùå INVALIDE');
    }
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur:', error);
    process.exit(1);
  }
}

debugAuth();
